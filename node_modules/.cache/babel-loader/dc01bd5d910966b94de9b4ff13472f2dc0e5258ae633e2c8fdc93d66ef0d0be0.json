{"ast":null,"code":"class Api {\n  constructor(option) {\n    this._baseUrl = option.baseUrl;\n    this._headers = option.headers;\n  }\n  _check(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return res.json().then(err => {\n      err.statusCode = res.status;\n      return Promise.reject(err);\n    });\n  }\n  getUser() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      credentials: 'include',\n      headers: this._headers,\n      method: 'GET'\n    }).then(res => this._check(res));\n  }\n  setUser(userData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      credentials: 'include',\n      headers: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: userData.name,\n        email: userData.email\n      })\n    }).then(res => this._check(res));\n  }\n  getSavedMovies() {\n    return fetch(`${this._baseUrl}/movies`, {\n      credentials: 'include',\n      headers: this._headers,\n      method: 'GET'\n    }).then(res => this._check(res));\n  }\n  addMovies(movieData) {\n    return fetch(`${this._baseUrl}/movies`, {\n      credentials: 'include',\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        country: movieData.country,\n        director: movieData.director,\n        duration: movieData.duration,\n        year: movieData.year,\n        description: movieData.description,\n        image: movieData.image,\n        trailer: movieData.trailer,\n        nameRU: movieData.nameRU,\n        nameEN: movieData.nameEN,\n        thumbnail: movieData.thumbnail,\n        movieId: movieData.movieId\n      })\n    }).then(res => this._check(res));\n  }\n  deleteSavedMovie(movieId) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      credentials: 'include',\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._check(res));\n  }\n  signUp(userData) {\n    return fetch(`${this._baseUrl}/signup`, {\n      credentials: 'include',\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userData.name,\n        password: userData.password,\n        email: userData.email\n      })\n    }).then(res => this._check(res));\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://api.movies.anastasiya.nomoredomains.club',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","option","_baseUrl","baseUrl","_headers","headers","_check","res","ok","json","then","err","statusCode","status","Promise","reject","getUser","fetch","credentials","method","setUser","userData","body","JSON","stringify","name","email","getSavedMovies","addMovies","movieData","country","director","duration","year","description","image","trailer","nameRU","nameEN","thumbnail","movieId","deleteSavedMovie","signUp","password","api"],"sources":["/Users/anastasiavolokitina/Documents/GitHub/movies-explorer-frontend/src/utils/Api.jsx"],"sourcesContent":["class Api {\n    constructor(option) {\n        this._baseUrl = option.baseUrl;\n        this._headers = option.headers;\n    }\n\n    _check(res) {\n        if (res.ok) {\n            return res.json();\n          }\n          return res.json()\n            .then((err) => {\n            err.statusCode = res.status; \n            return Promise.reject(err);\n           })\n    }\n\n    getUser() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            credentials: 'include',\n            headers: this._headers,\n            method: 'GET'\n        })\n            .then(res => this._check(res))\n    }\n\n    setUser(userData) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            credentials: 'include',\n            headers: this._headers,\n            method: 'PATCH',\n            body: JSON.stringify({\n                name: userData.name,\n                email: userData.email\n            })\n        })\n            .then(res => this._check(res))\n    }\n\n    getSavedMovies() {\n        return fetch(`${this._baseUrl}/movies`, {\n            credentials: 'include',\n            headers: this._headers,\n            method: 'GET'\n        })\n            .then(res => this._check(res))\n\n    }\n\n    addMovies(movieData) {\n        return fetch(`${this._baseUrl}/movies`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                country: movieData.country,\n                director: movieData.director,\n                duration: movieData.duration,\n                year: movieData.year,\n                description: movieData.description,\n                image: movieData.image,\n                trailer: movieData.trailer,\n                nameRU: movieData.nameRU,\n                nameEN: movieData.nameEN,\n                thumbnail: movieData.thumbnail,\n                movieId: movieData.movieId\n            })\n        })\n            .then(res => this._check(res));\n    }\n\n    deleteSavedMovie(movieId) {\n        return fetch(`${this._baseUrl}/movies/${movieId}`, {\n            credentials: 'include',\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._check(res))\n    }\n\n    signUp(userData) {\n        return fetch(`${this._baseUrl}/signup`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: userData.name,\n                password: userData.password,\n                email: userData.email\n            })\n        })\n            .then(res => this._check(res));\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: 'https://api.movies.anastasiya.nomoredomains.club',\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\nexport default api;"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAGD,MAAM,CAACE,OAAO;IAC9B,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,OAAO;EAClC;EAEAC,MAAM,CAACC,GAAG,EAAE;IACR,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOF,GAAG,CAACE,IAAI,EAAE,CACdC,IAAI,CAAEC,GAAG,IAAK;MACfA,GAAG,CAACC,UAAU,GAAGL,GAAG,CAACM,MAAM;MAC3B,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAAC;IAC3B,CAAC,CAAC;EACT;EAEAK,OAAO,GAAG;IACN,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,WAAU,EAAE;MACtCgB,WAAW,EAAE,SAAS;MACtBb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,MAAM,EAAE;IACZ,CAAC,CAAC,CACGT,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EACtC;EAEAa,OAAO,CAACC,QAAQ,EAAE;IACd,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,WAAU,EAAE;MACtCgB,WAAW,EAAE,SAAS;MACtBb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,MAAM,EAAE,OAAO;MACfG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;QACnBC,KAAK,EAAEL,QAAQ,CAACK;MACpB,CAAC;IACL,CAAC,CAAC,CACGhB,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EACtC;EAEAoB,cAAc,GAAG;IACb,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,SAAQ,EAAE;MACpCgB,WAAW,EAAE,SAAS;MACtBb,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBe,MAAM,EAAE;IACZ,CAAC,CAAC,CACGT,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EAEtC;EAEAqB,SAAS,CAACC,SAAS,EAAE;IACjB,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,SAAQ,EAAE;MACpCgB,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBM,OAAO,EAAED,SAAS,CAACC,OAAO;QAC1BC,QAAQ,EAAEF,SAAS,CAACE,QAAQ;QAC5BC,QAAQ,EAAEH,SAAS,CAACG,QAAQ;QAC5BC,IAAI,EAAEJ,SAAS,CAACI,IAAI;QACpBC,WAAW,EAAEL,SAAS,CAACK,WAAW;QAClCC,KAAK,EAAEN,SAAS,CAACM,KAAK;QACtBC,OAAO,EAAEP,SAAS,CAACO,OAAO;QAC1BC,MAAM,EAAER,SAAS,CAACQ,MAAM;QACxBC,MAAM,EAAET,SAAS,CAACS,MAAM;QACxBC,SAAS,EAAEV,SAAS,CAACU,SAAS;QAC9BC,OAAO,EAAEX,SAAS,CAACW;MACvB,CAAC;IACL,CAAC,CAAC,CACG9B,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EACtC;EAEAkC,gBAAgB,CAACD,OAAO,EAAE;IACtB,OAAOvB,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,WAAUsC,OAAQ,EAAC,EAAE;MAC/CtB,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,QAAQ;MAChBd,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGM,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EACtC;EAEAmC,MAAM,CAACrB,QAAQ,EAAE;IACb,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACf,QAAS,SAAQ,EAAE;MACpCgB,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;QACnBkB,QAAQ,EAAEtB,QAAQ,CAACsB,QAAQ;QAC3BjB,KAAK,EAAEL,QAAQ,CAACK;MACpB,CAAC;IACL,CAAC,CAAC,CACGhB,IAAI,CAACH,GAAG,IAAI,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC,CAAC;EACtC;AAEJ;AAEA,MAAMqC,GAAG,GAAG,IAAI7C,GAAG,CAAC;EAChBI,OAAO,EAAE,kDAAkD;EAC3DE,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAeuC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}