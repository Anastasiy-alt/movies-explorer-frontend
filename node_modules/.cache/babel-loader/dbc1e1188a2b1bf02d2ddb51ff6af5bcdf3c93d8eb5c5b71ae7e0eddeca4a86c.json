{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiavolokitina/Documents/GitHub/movies-explorer-frontend/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport '../../index.css';\nimport Header from '../Header/header';\nimport Promo from '../Main/Promo/promo';\nimport AboutProject from '../Main/AboutProject/aboutProject';\nimport Techs from '../Main/Techs/techs';\nimport AboutMe from '../Main/AboutMe/aboutMe';\nimport Footer from '../Footer/footer';\nimport Preloader from '../Movies/Preloader/Preloader';\nimport * as auth from '../../utils/auth';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../../context/CurrentUserContext';\nimport api from '../../utils/Api';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport SearchForm from '../Movies/SearchForm/SearchForm';\nimport MoviesCardList from '../Movies/MoviesCardList/MoviesCardList';\nimport More from '../Movies/More/More';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const history = useHistory();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectDelete, setSelectDelete] = useState(false);\n  const [deleteCard, setDeleteCard] = useState('');\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      return;\n    }\n    auth.checkToken(jwt).then(data => {\n      setUserEmail(data.email);\n      setCurrentUser(data);\n      setLoggedIn(true);\n      history.push(\"/\");\n    }).catch(err => console.log(err));\n    // api\n    //   .getInitialCards(jwt)\n    //   .then((initialCards) => {\n    //     setCards(initialCards)\n    //   })\n    //   .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     Promise.all([api.getInitialCards(), api.getUserInfo()])\n  //       .then(([cardData, userData]) => {\n  //         setCards(cardData);\n  //         setCurrentUser(userData);\n  //       })\n  //       .catch((err) => {\n  //         console.log(`Ошибка: ${err}`);\n  //       })\n  //   }\n  // }, [loggedIn])\n\n  const handleSignOut = () => {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    history.push(\"/signin\");\n  };\n  const handleUpdateUser = userData => {\n    api.setUserInfo(userData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  };\n  const handleAddCard = card => {\n    api.addCard(card).then(_ref => {\n      let {\n        data\n      } = _ref;\n      setCards([data, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  };\n  const handleUpdateAvatar = _ref2 => {\n    let {\n      avatar\n    } = _ref2;\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  };\n  function handleLogin(email, password) {\n    return auth.authorize(email, password).then(data => {\n      if (data) {\n        setLoggedIn(true);\n        localStorage.setItem('jwt', data.token);\n        setUserEmail(email);\n        history.push(\"/\");\n        tokenCheck();\n      }\n    }).catch(err => {\n      setIsSuccess(false);\n      setIsInfoTooltipPopupOpen(true);\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  // registration\n  function handleRegister(name, email, password) {\n    return auth.register(name, email, password).then(user => {\n      setLoggedIn(true);\n      setCurrentUser(user);\n      // setIsSuccess(true);\n      // setIsInfoTooltipPopupOpen(true);\n      history.push(\"/signin\");\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n  function handleCardDelete(cardId) {\n    api.deleteCard(cardId).then(() => {\n      setCards(state => state.filter(c => c._id !== cardId));\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n  const handleRemoveClick = cardId => {\n    setSelectDelete(!selectDelete);\n    setDeleteCard(cardId);\n  };\n  const handleUserInfo = userInfo => {\n    setCurrentUser(userInfo);\n  };\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectDelete(false);\n    setSelectedCard({});\n    setIsInfoTooltipPopupOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            loggedIn: \"true\",\n            onSignOut: handleSignOut,\n            movies: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MoviesCardList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(More, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qjhTgdFDrgArvI9OEjulrna+1+Y=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Promo","AboutProject","Techs","AboutMe","Footer","Preloader","auth","useState","useEffect","Route","Switch","Redirect","useHistory","CurrentUserContext","api","Login","Register","SearchForm","MoviesCardList","More","App","history","loggedIn","setLoggedIn","userEmail","setUserEmail","isSuccess","setIsSuccess","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","cards","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","selectDelete","setSelectDelete","deleteCard","setDeleteCard","tokenCheck","jwt","localStorage","getItem","checkToken","then","data","email","push","catch","err","console","log","handleSignOut","removeItem","handleUpdateUser","userData","setUserInfo","closeAllPopups","error","handleAddCard","card","addCard","handleUpdateAvatar","avatar","setUserAvatar","handleLogin","password","authorize","setItem","token","handleRegister","name","register","user","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","cardId","filter","handleRemoveClick","handleUserInfo","userInfo","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick"],"sources":["/Users/anastasiavolokitina/Documents/GitHub/movies-explorer-frontend/src/components/App/App.jsx"],"sourcesContent":["import '../../index.css';\nimport Header from '../Header/header';\nimport Promo from '../Main/Promo/promo';\nimport AboutProject from '../Main/AboutProject/aboutProject';\nimport Techs from '../Main/Techs/techs';\nimport AboutMe from '../Main/AboutMe/aboutMe';\nimport Footer from '../Footer/footer';\nimport Preloader from '../Movies/Preloader/Preloader';\nimport * as auth from '../../utils/auth';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../../context/CurrentUserContext';\nimport api from '../../utils/Api';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\nimport SearchForm from '../Movies/SearchForm/SearchForm';\nimport MoviesCardList from '../Movies/MoviesCardList/MoviesCardList';\nimport More from '../Movies/More/More';\n\nfunction App() {\n  const history = useHistory();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [selectDelete, setSelectDelete] = useState(false);\n  const [deleteCard, setDeleteCard] = useState('');\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      return;\n    }\n    auth\n      .checkToken(jwt)\n      .then((data) => {\n        setUserEmail(data.email);\n        setCurrentUser(data);\n        setLoggedIn(true);\n        history.push(\"/\")\n      })\n      .catch((err) => console.log(err));\n    // api\n    //   .getInitialCards(jwt)\n    //   .then((initialCards) => {\n    //     setCards(initialCards)\n    //   })\n    //   .catch((err) => console.log(err));\n  }\n\n  useEffect(() => {\n    tokenCheck()\n  }, []);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     Promise.all([api.getInitialCards(), api.getUserInfo()])\n  //       .then(([cardData, userData]) => {\n  //         setCards(cardData);\n  //         setCurrentUser(userData);\n  //       })\n  //       .catch((err) => {\n  //         console.log(`Ошибка: ${err}`);\n  //       })\n  //   }\n  // }, [loggedIn])\n\n  const handleSignOut = () => {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    history.push(\"/signin\");\n  }\n\n  const handleUpdateUser = (userData) => {\n    api.setUserInfo(userData)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(`Ошибка: ${error}`);\n      })\n  };\n  const handleAddCard = (card) => {\n    api.addCard(card)\n      .then(({ data }) => {\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  };\n  const handleUpdateAvatar = ({ avatar }) => {\n    api.setUserAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  };\n\n  function handleLogin(email, password) {\n    return auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data) {\n          setLoggedIn(true)\n          localStorage.setItem('jwt', data.token);\n          setUserEmail(email);\n          history.push(\"/\");\n          tokenCheck();\n        }\n      })\n      .catch((err) => {\n        setIsSuccess(false);\n        setIsInfoTooltipPopupOpen(true);\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  // registration\n  function handleRegister(name, email, password) {\n    return auth\n      .register(name, email, password)\n      .then((user) => {\n        setLoggedIn(true)\n        setCurrentUser(user);\n        // setIsSuccess(true);\n        // setIsInfoTooltipPopupOpen(true);\n        history.push(\"/signin\");\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      });\n  }\n  function handleCardDelete(cardId) {\n    api.deleteCard(cardId)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== cardId));\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      });\n  }\n\n  const handleRemoveClick = (cardId) => {\n    setSelectDelete(!selectDelete);\n    setDeleteCard(cardId);\n  };\n  const handleUserInfo = (userInfo) => {\n    setCurrentUser(userInfo);\n  }\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  }\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectDelete(false);\n    setSelectedCard({});\n    setIsInfoTooltipPopupOpen(false);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n\n        <Switch>\n          {/* <Route exact path='/'>\n\n            <Header\n              loggedIn={loggedIn}\n              onSignOut={handleSignOut}\n              movies='false' />\n            <Promo />\n            <AboutProject />\n            <Techs />\n            <AboutMe />\n            <Footer />\n\n          </Route> */}\n\n          <Route exact path='/'>\n\n            <Header\n              loggedIn='true'\n              onSignOut={handleSignOut}\n              movies='true' />\n\n              <SearchForm />\n            <MoviesCardList />\n            <More />\n\n\n          </Route>\n\n          <Route exact path='/signup'>\n            <Register onRegister={handleRegister} />\n          </Route>\n\n          <Route exact path='/signin'>\n            <Login onLogin={handleLogin} />\n          </Route>\n\n          <Route exact path='*'>\n            {/* 404  */}\n          </Route>\n\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n          </Route>\n        </Switch>\n        {/* <Preloader /> */}\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}